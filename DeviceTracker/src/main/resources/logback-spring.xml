<?xml version="1.0" encoding="UTF-8" ?>
<configuration>
    <springProperty scope="context" name="LOG_PATH" source="logging.path"/>

    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">


            <pattern>[dynamo_db_tracker]%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] %class:%line >> %msg%n</pattern>


        </layout>
    </appender>

    <!--滚动策略-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
        </filter>
        <encoder>
            <pattern>[dynamo_db_log_server]%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] %class:%line >> %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${LOG_PATH}/info.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数 -->
            <maxHistory>3</maxHistory>
        </rollingPolicy>
    </appender>

    <!--滚动策略-->
    <appender name="fileWarnLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
        <encoder>
            <pattern>[dynamo_db_warn_log_server]%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] %class:%line >> %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${LOG_PATH}/warn.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数 -->
            <maxHistory>3</maxHistory>
        </rollingPolicy>
    </appender>

    <!--滚动策略-->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>[dynamo_db_error_log_server]%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread] %class:%line >> %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${LOG_PATH}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数 -->
            <maxHistory>3</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- 读取dynamo的时间记录 -->
    <appender name="scanLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/worker/scan.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
                    <fileNamePattern>${LOG_PATH}/worker/scan-%d{yyyy-MM-dd}.log</fileNamePattern>  
        </rollingPolicy>
        <encoder>
            <pattern>%d{MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 写入dynamo的时间记录 -->
    <appender name="writeLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/worker/write.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
                    <fileNamePattern>${LOG_PATH}/worker/write-%d{yyyy-MM-dd}.log</fileNamePattern>  
        </rollingPolicy>
        <encoder>
            <pattern>%d{MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 读失败，保存last key -->
    <appender name="lastKeyLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/worker/lastKey.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
                    <fileNamePattern>${LOG_PATH}/worker/lastKey-%d{yyyy-MM-dd}.log</fileNamePattern>  
        </rollingPolicy>
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>

    <!-- 写失败保存 -->
    <!-- 每个表一个文件, 文件的每一行为WriteWorker的List转json格式, 文件名为List中元素的类名称 -->
    <appender name="writeFailSift" class="ch.qos.logback.classic.sift.SiftingAppender">

        <discriminator>
            <key>entityName</key>
            <defaultValue>unknown</defaultValue>
        </discriminator>

        <sift>
            <appender name="FILE-${entityName}" class="ch.qos.logback.core.FileAppender">
                <file>${LOG_PATH}/write_fail/${entityName}</file>
                <encoder>
                    <pattern>%msg%n</pattern>
                </encoder>
            </appender>
        </sift>
    </appender>

    <!-- openid查匿名设备记录 -->
    <appender name="queryLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/worker/query.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">  
                    <fileNamePattern>${LOG_PATH}/worker/query-%d{yyyy-MM-dd}.log</fileNamePattern>  
        </rollingPolicy>
        <encoder>
            <pattern>%d{MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{5} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 查询失败，记录匿名用户 -->
    <appender name="queryFailLog" class="ch.qos.logback.core.FileAppender">
        <file>${LOG_PATH}/query_fail/com.jinke.basecommon.entity.AnomymousAccountItem</file>
        <encoder>
            <pattern>%msg%n</pattern>
        </encoder>
    </appender>


    <root>
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileInfoLog"/>
        <appender-ref ref="fileErrorLog"/>
        <appender-ref ref="fileWarnLog"/>
    </root>

    <logger name="com.jinke.dynamodb.devicetracker.worker.DeviceWorker">
        <appender-ref ref="scanLog"/>
    </logger>

    <logger name="com.jinke.dynamodb.devicetracker.worker.DeviceWorker.saveLastKey">
        <appender-ref ref="lastKeyLog"/>
    </logger>

    <logger name="com.jinke.basecommon.worker.WriteWorker.writefail">
        <appender-ref ref="writeFailSift"/>
    </logger>

    <logger name="com.jinke.basecommon.worker.WriteWorker">
        <appender-ref ref="writeLog"/>
    </logger>

    <logger name="com.jinke.basecommon.worker.DeviceItemResultWorker">
        <appender-ref ref="queryLog"/>
    </logger>

    <logger name="com.jinke.basecommon.worker.DeviceItemResultWorker.queryfail">
        <appender-ref ref="queryFailLog"/>
    </logger>

</configuration>